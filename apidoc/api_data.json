[  {    "type": "post",    "url": "/api/auth",    "title": "Login",    "name": "Login",    "group": "Auth",    "description": "<p>Authenticates the user and returns the auth token. The token is also saved to a Redis store so it can be revoked at any time. It returns the token data and also the user info (like the user name, the profile, privileges and any other user info), to avoid unnecessary additional API calls.</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i -X POST http://localhost:9000/api/auth --data \"username=demo&password=demo\"",        "type": "json"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>User name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>User password.</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "id",            "description": "<p>User id.</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username.</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>User email.</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "token",            "description": "<p>JWT.</p> "          },          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "token_exp",            "description": "<p>Token expiry date (Unix time).</p> "          },          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "token_iat",            "description": "<p>Token issue date (Unix time).</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "role",            "description": "<p>User role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "user",            "description": "<p>The user object (as a relation, expanded by default)</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {},\n  \"data\": {\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjU2NTEwZTdiNmM3NTQ3MjllY2U3YjAyYiIsImlhdCI6MTQ0ODMwMTU2NywiZXhwIjoxNDQ4MzA1MTY3fQ.WzT-WhiXwE3NwKglieU-Yp6sq5iMmZweOkqDEwmJL1E\",\n    \"token_exp\": 1448305167,\n    \"token_iat\": 1448301567,\n    \"user\": {\n      \"meta\": {\n        \"url\": \"http://localhost:8000/api/auth/admins/56510e7b6c754729ece7b02b\"\n      },\n      \"data\": {\n        \"updated_at\": 1448220446,\n        \"created_at\": 1448152700,\n        \"username\": \"someUser\",\n        \"email\": \"user@server.com\",\n        \"role\": \"ADMIN\",\n        \"profile\": {\n          \"meta\": {\n            \"url\": null\n          },\n          \"data\": {\n            \"url\": \"\",\n            \"company\": \"\",\n            \"location\": \"\",\n            \"phone\": \"\",\n            \"surname\": \"Whatever\",\n            \"name\": \"aName\",\n            \"avatar\": \"//www.gravatar.com/avatar/cec5944b19f0fbf04fc18f0a149e6ef0\",\n            \"image\": {\n              \"updated_at\": 1448220443,\n              \"created_at\": 1448220443,\n              \"contentType\": \"image/png\",\n              \"size\": 635230,\n              \"path\": \"uploads/VJiN8-iXx.png\",\n              \"host\": \"192.168.1.10:8000\",\n              \"url\": \"http://192.168.1.10:8000/uploads/VJiN8-iXx.png\",\n              \"id\": \"5652171a2e804f2f4f576aae\"\n            }\n          }\n        },\n        \"id\": \"56510e7b6c754729ece7b02b\",\n        \"privileges\": {\n          \"users\": true,\n          \"managers\": true,\n          \"admins\": true,\n          \"knowledge_base\": true\n        }\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401": [          {            "group": "401",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "error",            "description": "<p>Error.</p> "          },          {            "group": "401",            "type": "<p>Number</p> ",            "optional": false,            "field": "errorCode",            "description": "<p>Error code.</p> "          },          {            "group": "401",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>Error description.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"error\": {\n    \"code\": \"401\",\n    \"message\": \"Invalid username or password\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/1.auth.js",    "groupTitle": "Auth"  },  {    "type": "delete",    "url": "/api/auth/{token}",    "title": "Logout",    "name": "Logout",    "group": "Auth",    "description": "<p>Deauthenticates the user by invalidating the token.</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i -X DELETE http://localhost:9000/api/auth/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Auth. header containing the token.</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>Logout success message.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\" : {},\n  \"data\" : {\n    \"message\": \"User has been successfully logged out\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401": [          {            "group": "401",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "error",            "description": "<p>Error.</p> "          },          {            "group": "401",            "type": "<p>Number</p> ",            "optional": false,            "field": "errorCode",            "description": "<p>Error code.</p> "          },          {            "group": "401",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>Error description.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"error\": {\n    \"code\": \"401\",\n    \"message\": \"invalid_token\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/1.auth.js",    "groupTitle": "Auth"  },  {    "type": "put",    "url": "/api/auth/:token",    "title": "Token renewal",    "name": "TokenRenew",    "group": "Auth",    "description": "<p>Creates a new token with a new expiry date without requiring the user to send again its credentials.</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i -X PUT http://localhost:9000/api/auth/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Auth. header containing the token.</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "id",            "description": "<p>User id.</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username.</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>User email.</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "token",            "description": "<p>JWT.</p> "          },          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "token_exp",            "description": "<p>Token expiry date (Unix time).</p> "          },          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "token_iat",            "description": "<p>Token issue date (Unix time).</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\" : {},\n  \"data\" : {\n    \"id\": \"54ee6175465eaee35cd237ed\",\n    \"username\": \"demo\",\n    \"email\": \"demo@demo.demo\",\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTQ0ODYsImV4cCI6MTQyNzgxODA4Nn0.pZVBE_GKvJUr4BI7BDeTmIIy9gQ2p3tlrG2pcMcjm3U\",\n    \"token_exp\": 1427818086,\n    \"token_iat\": 1427814486\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401": [          {            "group": "401",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "error",            "description": "<p>Error.</p> "          },          {            "group": "401",            "type": "<p>Number</p> ",            "optional": false,            "field": "errorCode",            "description": "<p>Error code.</p> "          },          {            "group": "401",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>Error description.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"error\": {\n    \"code\": \"401\",\n    \"message\": \"invalid_token\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/1.auth.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/api/auth/:token",    "title": "Token verification",    "name": "Verify",    "group": "Auth",    "description": "<p>Verifies if the token is valid and has not expired.</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/auth/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Auth. header containing the token.</p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>Auth. verification result.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\" : {},\n  \"data\" : {\n    \"message\": \"Token is valid\"\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401": [          {            "group": "401",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "error",            "description": "<p>Error.</p> "          },          {            "group": "401",            "type": "<p>Number</p> ",            "optional": false,            "field": "errorCode",            "description": "<p>Error code.</p> "          },          {            "group": "401",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>Error description.</p> "          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"error\": {\n    \"code\": \"401\",\n    \"message\": \"invalid_token\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/1.auth.js",    "groupTitle": "Auth"  },  {    "type": "patch",    "url": "/auth/activate/managers/:id",    "title": "Activate a manager account",    "name": "ActivateManager",    "group": "Auth_Activate",    "description": "<p>Activate a manager account and set any additional details for that user (like the password)</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -X PATCH -H \"Content-Type: application/x-www-form-urlencoded\" 'http://localhost:9000/api/auth/activate/managers/55a4fc5b356e6df4d223618e'",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:8000/api/auth/activate/managers/e46e68f7-3531-42fa-8b3d-cca3856f746e\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.managers_activation.js",    "groupTitle": "Auth/Activate",    "groupDescription": "<p>Accounts activation API endpoint</p> "  },  {    "type": "patch",    "url": "/auth/activate/users/:id",    "title": "Activate an user account",    "name": "ActivateUser",    "group": "Auth_Activate",    "description": "<p>Activate an user account and set any additional details for that user (like the profile)</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -X PATCH -H \"Content-Type: application/x-www-form-urlencoded\" 'http://localhost:9000/api/auth/activate/users/55a4fc5b356e6df4d223618e'",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:8000/api/auth/activate/users/e46e68f7-3531-42fa-8b3d-cca3856f746e\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.users_activation.js",    "groupTitle": "Auth/Activate",    "groupDescription": "<p>Accounts activation API endpoint</p> "  },  {    "type": "post",    "url": "/auth/admins",    "title": "Create (register) a new user",    "name": "Create",    "group": "Auth_Admins",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username, must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>Password.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>Email,must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -H \"Content-Type: application/x-www-form-urlencoded\" -d 'username=foo&password=bar&email=someEmail@domain.tld' http://localhost:9000/api/auth/admins",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/admins/5582cedfbc15803005798b8f\"\n  },\n  \"data\": {\n    \"email\": \"demo2@demo.com\",\n    \"email\": \"demo2@demo.com\",\n    \"username\": \"foo\",\n    \"role\": \"562bb8139e6d738cf1756094\",\n    \"id\": \"562d359113200eacb9ed378c\"\n    \"updated_at\": 1434628060,\n    \"created_at\": 1434628060\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.admins.js",    "groupTitle": "Auth/Admins",    "groupDescription": "<p>Admins API endpoint</p> "  },  {    "type": "delete",    "url": "/auth/admins/:id",    "title": "Delete a user",    "name": "Delete",    "description": "<p>Delete the user with this id</p> ",    "group": "Auth_Admins",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i -X DELETE http://localhost:9000/api/auth/admins/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "Auth_Managers",        "title": "Auth/Managers",        "description": "<p>Managers API endpoint</p> "      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {},\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.admins.js",    "groupTitle": "Auth/Admins",    "groupDescription": "<p>Admins API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/auth/admins/:id",    "title": "Get an user",    "name": "Get",    "description": "<p>Get the user with that id</p> ",    "group": "Auth_Admins",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/auth/admins/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_admins_self",        "title": "A user can only access to their own record (ADMINS have access to all).",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/admins/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.admins.js",    "groupTitle": "Auth/Admins",    "groupDescription": "<p>Admins API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/auth/admins",    "title": "List the users",    "name": "List",    "description": "<p>List all the users (with an USER role)</p> ",    "group": "Auth_Admins",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/auth/admins --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_admins",        "title": "Global module access for `Auth_Admins` is required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\" : {\n    \"url\": \"http://localhost:9000/api/auth/admins\",\n    \"paginator\": {\n      \"total_entries\": 100,\n      \"total_pages\": 5,\n      \"page\": 1,\n      \"per_page\": 20\n    }\n  },\n  \"data\": [\n    {\n      \"email\": \"demo@demo.com\",\n      \"username\": \"foo\",\n      \"role\": \"562bb8139e6d738cf1756094\",\n      \"id\": \"562c0902c6f7237d5f303659\"\n      \"updated_at\": 1434627873,\n      \"created_at\": 1434627873\n    },\n    {\n      \"email\": \"demo2@demo.com\",\n      \"username\": \"bar\",\n      \"role\": \"562bb8139e6d738cf1756094\",\n      \"id\": \"562d359113200eacb9ed378c\"\n      \"updated_at\": 1434628060,\n      \"created_at\": 1434628060\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "meta.paginator",            "description": "<p>Pagination params</p> "          },          {            "group": "Success 200",            "type": "<p>Object[]</p> ",            "optional": false,            "field": "data",            "description": "<p>The Users data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.admins.js",    "groupTitle": "Auth/Admins",    "groupDescription": "<p>Admins API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "patch",    "url": "/auth/admins/:id",    "title": "Partial update a user",    "name": "Patch",    "description": "<p>Update the user with this id. Only provided values will be applied</p> ",    "group": "Auth_Admins",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "username",            "description": "<p>Username, must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "password",            "description": "<p>Password.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "email",            "description": "<p>Email,must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PATCH -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNjg4MjM5NSwiZXhwIjoxNDM2ODg1OTk1fQ.-ezinK068LnnUgotT7FVg2QRu4vGM2KAmBwK55kxj7M\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'email=someEmail@domain.tld' 'http://localhost:9000/api/auth/admins/55a4fc5b356e6df4d223618e'",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_admins_self",        "title": "A user can only access to their own record (ADMINS have access to all).",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/admins/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.admins.js",    "groupTitle": "Auth/Admins",    "groupDescription": "<p>Admins API endpoint</p> "  },  {    "type": "put",    "url": "/auth/admins/:id",    "title": "Update a user",    "name": "Update",    "description": "<p>Update the user with this id</p> ",    "group": "Auth_Admins",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username, must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>Password.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>Email,must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PUT -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDYzMzgwNCwiZXhwIjoxNDM0NjM3NDA0fQ.IwPItcFLIDzA1MvwDXNYjVF0PxVcQ_Mft5wAU-2D8bY\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'username=foo&password=bar&email=someEmail@domain.tld' http://localhost:9000/api/auth/admins/5581f70e4901e5baa84a9652",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_admins_self",        "title": "A user can only access to their own record (ADMINS have access to all).",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/admins/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.admins.js",    "groupTitle": "Auth/Admins",    "groupDescription": "<p>Admins API endpoint</p> "  },  {    "type": "post",    "url": "/auth/managers",    "title": "Create (register) a new user",    "name": "Create",    "group": "Auth_Managers",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username, must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>Password.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>Email,must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -H \"Content-Type: application/x-www-form-urlencoded\" -d 'username=foo&password=bar&email=someEmail@domain.tld' http://localhost:9000/api/auth/managers",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/managers/5582cedfbc15803005798b8f\"\n  },\n  \"data\": {\n    \"email\": \"demo2@demo.com\",\n    \"email\": \"demo2@demo.com\",\n    \"username\": \"foo\",\n    \"role\": \"562bb8139e6d738cf1756094\",\n    \"id\": \"562d359113200eacb9ed378c\"\n    \"updated_at\": 1434628060,\n    \"created_at\": 1434628060\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.managers.js",    "groupTitle": "Auth/Managers",    "groupDescription": "<p>Managers API endpoint</p> "  },  {    "type": "delete",    "url": "/auth/managers/:id",    "title": "Delete a user",    "name": "Delete",    "description": "<p>Delete the user with this id</p> ",    "group": "Auth_Managers",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i -X DELETE http://localhost:9000/api/auth/managers/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "Auth_Managers",        "title": "Auth/Managers",        "description": "<p>Managers API endpoint</p> "      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {},\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.managers.js",    "groupTitle": "Auth/Managers",    "groupDescription": "<p>Managers API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/auth/managers/:id",    "title": "Get an user",    "name": "Get",    "description": "<p>Get the user with that id</p> ",    "group": "Auth_Managers",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/auth/managers/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_managers_self",        "title": "A user can only access to their own record (ADMINS have access to all).",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/managers/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.managers.js",    "groupTitle": "Auth/Managers",    "groupDescription": "<p>Managers API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/auth/managers",    "title": "List the users",    "name": "List",    "description": "<p>List all the users (with an USER role)</p> ",    "group": "Auth_Managers",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/auth/managers --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_managers_read",        "title": "Read permissions to the module are required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\" : {\n    \"url\": \"http://localhost:9000/api/auth/managers\",\n    \"paginator\": {\n      \"total_entries\": 100,\n      \"total_pages\": 5,\n      \"page\": 1,\n      \"per_page\": 20\n    }\n  },\n  \"data\": [\n    {\n      \"email\": \"demo@demo.com\",\n      \"username\": \"foo\",\n      \"role\": \"562bb8139e6d738cf1756094\",\n      \"id\": \"562c0902c6f7237d5f303659\"\n      \"updated_at\": 1434627873,\n      \"created_at\": 1434627873\n    },\n    {\n      \"email\": \"demo2@demo.com\",\n      \"username\": \"bar\",\n      \"role\": \"562bb8139e6d738cf1756094\",\n      \"id\": \"562d359113200eacb9ed378c\"\n      \"updated_at\": 1434628060,\n      \"created_at\": 1434628060\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "meta.paginator",            "description": "<p>Pagination params</p> "          },          {            "group": "Success 200",            "type": "<p>Object[]</p> ",            "optional": false,            "field": "data",            "description": "<p>The Users data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.managers.js",    "groupTitle": "Auth/Managers",    "groupDescription": "<p>Managers API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "patch",    "url": "/auth/managers/:id",    "title": "Partial update a user",    "name": "Patch",    "description": "<p>Update the user with this id. Only provided values will be applied</p> ",    "group": "Auth_Managers",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "username",            "description": "<p>Username, must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "password",            "description": "<p>Password.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "email",            "description": "<p>Email,must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PATCH -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNjg4MjM5NSwiZXhwIjoxNDM2ODg1OTk1fQ.-ezinK068LnnUgotT7FVg2QRu4vGM2KAmBwK55kxj7M\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'email=someEmail@domain.tld' 'http://localhost:9000/api/auth/managers/55a4fc5b356e6df4d223618e'",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_managers_self",        "title": "A user can only access to their own record (ADMINS have access to all).",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/managers/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.managers.js",    "groupTitle": "Auth/Managers",    "groupDescription": "<p>Managers API endpoint</p> "  },  {    "type": "put",    "url": "/auth/managers/:id",    "title": "Update a user",    "name": "Update",    "description": "<p>Update the user with this id</p> ",    "group": "Auth_Managers",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username, must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>Password.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>Email,must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PUT -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDYzMzgwNCwiZXhwIjoxNDM0NjM3NDA0fQ.IwPItcFLIDzA1MvwDXNYjVF0PxVcQ_Mft5wAU-2D8bY\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'username=foo&password=bar&email=someEmail@domain.tld' http://localhost:9000/api/auth/managers/5581f70e4901e5baa84a9652",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_managers_self",        "title": "A user can only access to their own record (ADMINS have access to all).",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/managers/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.managers.js",    "groupTitle": "Auth/Managers",    "groupDescription": "<p>Managers API endpoint</p> "  },  {    "type": "post",    "url": "/auth/recover",    "title": "Create a password reset request",    "name": "Create",    "group": "Auth_PasswordReset",    "description": "<p>Creates a password reset requests that allows the user to set a new password without providing the previous one. In order to set the new password, a new request must be performed to a temporary url with the new password (a mail will be sent to the user with a special temporary link that will perform that API request). When calling this method, either the username or the email must be provided.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "username",            "description": "<p>Username</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "email",            "description": "<p>Email</p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -H \"Content-Type: application/x-www-form-urlencoded\" -d 'username=foo' http://localhost:9000/api/auth/recover",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The request data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.success",            "description": "<p>Boolean</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.message",            "description": "<p>A descriptive message</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.user",            "description": "<p>The user id</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9000/api/auth/recover/83b3bf20-b2ad-4f6d-85c3-d43848495281\"\n  },\n  \"data\": {\n    \"success\": true,\n    \"message\": \"Password reset request created successfully\",\n    \"user\": \"562e3b0c930b26b7755d0d76\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.password_recovery.js",    "groupTitle": "Auth/PasswordReset",    "groupDescription": "<p>Password reset API endpoint</p> "  },  {    "type": "put",    "url": "/auth/recover/:id",    "title": "Set a new password for the user associated to the password reset request",    "name": "Update",    "group": "Auth_PasswordReset",    "description": "<p>Creates a password reset requests that allows the user to set a new password without providing the previous one. In order to set the new password, a new request must be performed to a temporary url with the new password (a mail will be sent to the user with a special temporary link that will perform that API request). When calling this method, either the username or the email must be provided.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>The new password</p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -H \"Content-Type: application/x-www-form-urlencoded\" -d 'password=theNewPassword' http://localhost:9000/api/auth/recover/http://localhost:9000/api/auth/recover/83b3bf20-b2ad-4f6d-85c3-d43848495281\"",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The request data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.success",            "description": "<p>Boolean</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.message",            "description": "<p>A descriptive message</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.user",            "description": "<p>The user id</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9000/api/auth/recover/83b3bf20-b2ad-4f6d-85c3-d43848495281\"\n  },\n  \"data\": {\n    \"success\": true,\n    \"message\": \"Password changed successfully\",\n    \"user\": \"562e3b0c930b26b7755d0d76\"\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.password_recovery.js",    "groupTitle": "Auth/PasswordReset",    "groupDescription": "<p>Password reset API endpoint</p> "  },  {    "type": "post",    "url": "/auth/users",    "title": "Create (register) a new user",    "name": "Create",    "group": "Auth_Users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username, must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>Password.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>Email,must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -H \"Content-Type: application/x-www-form-urlencoded\" -d 'username=foo&password=bar&email=someEmail@domain.tld' http://localhost:9000/api/auth/users",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/users/5582cedfbc15803005798b8f\"\n  },\n  \"data\": {\n    \"email\": \"demo2@demo.com\",\n    \"email\": \"demo2@demo.com\",\n    \"username\": \"foo\",\n    \"role\": \"562bb8139e6d738cf1756094\",\n    \"id\": \"562d359113200eacb9ed378c\"\n    \"updated_at\": 1434628060,\n    \"created_at\": 1434628060\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.users.js",    "groupTitle": "Auth/Users",    "groupDescription": "<p>Users API endpoint</p> "  },  {    "type": "delete",    "url": "/auth/users/:id",    "title": "Delete a user",    "name": "Delete",    "description": "<p>Delete the user with this id</p> ",    "group": "Auth_Users",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i -X DELETE http://localhost:9000/api/auth/users/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_users_self",        "title": "A user can only access to their own record (ADMINS have access to all).",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {},\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.users.js",    "groupTitle": "Auth/Users",    "groupDescription": "<p>Users API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/auth/users/:id",    "title": "Get an user",    "name": "Get",    "description": "<p>Get the user with that id</p> ",    "group": "Auth_Users",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/auth/users/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_users_self",        "title": "A user can only access to their own record (ADMINS have access to all).",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/users/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.users.js",    "groupTitle": "Auth/Users",    "groupDescription": "<p>Users API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/auth/users",    "title": "List the users",    "name": "List",    "description": "<p>List all the users (with an USER role)</p> ",    "group": "Auth_Users",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/auth/users --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_managers_read",        "title": "Read permissions to the module are required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\" : {\n    \"url\": \"http://localhost:9000/api/auth/users\",\n    \"paginator\": {\n      \"total_entries\": 100,\n      \"total_pages\": 5,\n      \"page\": 1,\n      \"per_page\": 20\n    }\n  },\n  \"data\": [\n    {\n      \"email\": \"demo@demo.com\",\n      \"username\": \"foo\",\n      \"role\": \"562bb8139e6d738cf1756094\",\n      \"id\": \"562c0902c6f7237d5f303659\"\n      \"updated_at\": 1434627873,\n      \"created_at\": 1434627873\n    },\n    {\n      \"email\": \"demo2@demo.com\",\n      \"username\": \"bar\",\n      \"role\": \"562bb8139e6d738cf1756094\",\n      \"id\": \"562d359113200eacb9ed378c\"\n      \"updated_at\": 1434628060,\n      \"created_at\": 1434628060\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "meta.paginator",            "description": "<p>Pagination params</p> "          },          {            "group": "Success 200",            "type": "<p>Object[]</p> ",            "optional": false,            "field": "data",            "description": "<p>The Users data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.users.js",    "groupTitle": "Auth/Users",    "groupDescription": "<p>Users API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "patch",    "url": "/auth/users/:id",    "title": "Partial update a user",    "name": "Patch",    "description": "<p>Update the user with this id. Only provided values will be applied</p> ",    "group": "Auth_Users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "username",            "description": "<p>Username, must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "password",            "description": "<p>Password.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "email",            "description": "<p>Email,must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PATCH -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNjg4MjM5NSwiZXhwIjoxNDM2ODg1OTk1fQ.-ezinK068LnnUgotT7FVg2QRu4vGM2KAmBwK55kxj7M\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'email=someEmail@domain.tld' 'http://localhost:9000/api/auth/users/55a4fc5b356e6df4d223618e'",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_users_self",        "title": "A user can only access to their own record (ADMINS have access to all).",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/users/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.users.js",    "groupTitle": "Auth/Users",    "groupDescription": "<p>Users API endpoint</p> "  },  {    "type": "put",    "url": "/auth/users/:id",    "title": "Update a user",    "name": "Update",    "description": "<p>Update the user with this id</p> ",    "group": "Auth_Users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>Username, must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "password",            "description": "<p>Password.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "email",            "description": "<p>Email,must be unique.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PUT -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDYzMzgwNCwiZXhwIjoxNDM0NjM3NDA0fQ.IwPItcFLIDzA1MvwDXNYjVF0PxVcQ_Mft5wAU-2D8bY\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'username=foo&password=bar&email=someEmail@domain.tld' http://localhost:9000/api/auth/users/5581f70e4901e5baa84a9652",        "type": "json"      }    ],    "permission": [      {        "name": "permission_auth_users_self",        "title": "A user can only access to their own record (ADMINS have access to all).",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/users/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"id\": \"562e18f5ea83189f4497e01a\",\n    \"username\": \"foo\",\n    \"email\": \"email1@domain.com\",\n    \"role\": \"562bb8109e6d738cf175607a\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The User data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.username",            "description": "<p>User name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.email",            "description": "<p>User email</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.role",            "description": "<p>User Role</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.profile",            "description": "<p>User profile</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/routes/auth/0.users.js",    "groupTitle": "Auth/Users",    "groupDescription": "<p>Users API endpoint</p> "  },  {    "type": "post",    "url": "/knowledge_base/articles",    "title": "Create a new article",    "name": "Create",    "group": "KnowledgeBase_Articles",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Article title.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "body",            "description": "<p>Article content.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "excerpt",            "description": "<p>Excerpt.</p> "          },          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "published",            "description": "<p>Publish status.</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": true,            "field": "publish_date",            "description": "<p>Publish date, as a timestamp. If <code>published</code> is true and the <code>publish_date</code> is provided, the post will not be published until that date.</p> "          },          {            "group": "Parameter",            "type": "<p>mixed</p> ",            "optional": false,            "field": "tags",            "description": "<p>Article tags, as objects (an array of this objects is accepted) The objects must have an id attribute for existing tags. If the tag does not have an ID it is assumed to be a new one and the creation of the tag will be attempted.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDYzMzgwNCwiZXhwIjoxNDM0NjM3NDA0fQ.IwPItcFLIDzA1MvwDXNYjVF0PxVcQ_Mft5wAU-2D8bY\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'title=Article+title&slug=article-slug&excerpt=Article+excerpt&body=Article+body&published=1&publish_date=1434540172' http://localhost:9000/api/knowledge_base/articles",        "type": "json"      }    ],    "permission": [      {        "name": "knowledge_base",        "title": "Global module access for `knowledge_base` is required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/users/562d694276663150095d9143\"\n  },\n  \"data\": {\n    \"updated_at\": 1434636000,\n    \"created_at\": 1434636000,\n    \"role\": \"562bb8139e6d738cf1756094\",\n    \"username\": \"someName\",\n    \"email\": \"somename@somedomain.com\",\n    \"id\": \"562d694276663150095d9143\"\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Article data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.excerpt",            "description": "<p>Excerpt</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "data.published",            "description": "<p>Publish status</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.publish_date",            "description": "<p>Publish date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Article tags. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Article category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments.</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/index.js",    "groupTitle": "KnowledgeBase/Articles",    "groupDescription": "<p>Articles API endpoint</p> "  },  {    "type": "delete",    "url": "/knowledge_base/articles/:id",    "title": "Delete an article",    "name": "Delete",    "description": "<p>Delete the article with this id</p> ",    "group": "KnowledgeBase_Articles",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i -X DELETE http://localhost:9000/api/knowledge_base/articles/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "knowledge_base",        "title": "Global module access for `knowledge_base` is required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {},\n  \"data\": {\n    \"title\": \"Test\",\n    \"slug\": \"this-is-a-test\",\n    \"excerpt\": \"Holaquetal\",\n    \"body\": \"HOLAQUETAL\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089,\n    \"publish_date\": 1434540,\n    \"published\": true,\n    \"id\": \"5581f70e4901e5baa84a9652\",\n    \"tags\": {\n      \"meta\": {\n        \"url\": \"http://localhost:9000/api/knowledge_base/articles/5581f70e4901e5baa84a9652/tags\",\n        \"count\": 0\n      }\n    }\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Article data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.excerpt",            "description": "<p>Excerpt</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "data.published",            "description": "<p>Publish status</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.publish_date",            "description": "<p>Publish date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Article tags. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Article category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments.</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/index.js",    "groupTitle": "KnowledgeBase/Articles",    "groupDescription": "<p>Articles API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/knowledge_base/articles/:id",    "title": "Get an article",    "name": "Get",    "description": "<p>Get the article with that id</p> ",    "group": "KnowledgeBase_Articles",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/knowledge_base/articles/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/knowledge_base/articles/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"title\": \"Test\",\n    \"slug\": \"this-is-a-test\",\n    \"excerpt\": \"Holaquetal\",\n    \"body\": \"HOLAQUETAL\",\n    \"updated_at\": 1434622332,\n    \"created_at\": 1434518089,\n    \"publish_date\": 1434540,\n    \"published\": true,\n    \"id\": \"5581f70e4901e5baa84a9652\",\n    \"tags\": {\n      \"meta\": {\n        \"url\": \"http://localhost:9000/api/knowledge_base/articles/5581f70e4901e5baa84a9652/tags\",\n        \"count\": 0\n      }\n    }\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Article data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.excerpt",            "description": "<p>Excerpt</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "data.published",            "description": "<p>Publish status</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.publish_date",            "description": "<p>Publish date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Article tags. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Article category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments.</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/index.js",    "groupTitle": "KnowledgeBase/Articles",    "groupDescription": "<p>Articles API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/knowledge_base/articles",    "title": "List the articles",    "name": "List",    "description": "<p>List all the articles</p> ",    "group": "KnowledgeBase_Articles",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/knowledge_base/articles --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\" : {\n    \"url\": \"http://localhost:9001/knowledge_base/articles\",\n    \"paginator\": {\n      \"total_entries\": 100,\n      \"total_pages\": 5,\n      \"page\": 1,\n      \"per_page\": 20\n    }\n  },\n  \"data\": [\n    {\n      \"body\": \"Article body\",\n      \"excerpt\": \"Article excerpt\",\n      \"slug\": \"article-slug-1\",\n      \"title\": \"Article title\",\n      \"updated_at\": 1434627873,\n      \"created_at\": 1434627873,\n      \"publish_date\": 1434540,\n      \"published\": true,\n      \"id\": \"5582af212207075ddbc42210\",\n      \"tags\": {\n        \"meta\": {\n          \"url\": \"http://localhost:9000/api/knowledge_base/articles/5582af212207075ddbc42210/tags\",\n          \"count\": 0\n        }\n      }\n    },\n    {\n      \"body\": \"Article body\",\n      \"excerpt\": \"Article excerpt\",\n      \"slug\": \"article-slug-2\",\n      \"title\": \"Article title\",\n      \"updated_at\": 1434628060,\n      \"created_at\": 1434628060,\n      \"publish_date\": 1434540,\n      \"published\": true,\n      \"id\": \"5582afdc2cf7b648dcf84aba\",\n      \"tags\": {\n        \"meta\": {\n          \"url\": \"http://localhost:9000/api/knowledge_base/articles/5582afdc2cf7b648dcf84aba/tags\",\n          \"count\": 0\n        }\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "meta.paginator",            "description": "<p>Pagination params</p> "          },          {            "group": "Success 200",            "type": "<p>Object[]</p> ",            "optional": false,            "field": "data",            "description": "<p>The Articles data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.excerpt",            "description": "<p>Excerpt</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "data.published",            "description": "<p>Publish status</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.publish_date",            "description": "<p>Publish date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Article tags. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Article category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments.</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/index.js",    "groupTitle": "KnowledgeBase/Articles",    "groupDescription": "<p>Articles API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "patch",    "url": "/knowledge_base/articles/:id",    "title": "Partial update an article",    "name": "Patch",    "description": "<p>Update the article with this id. Only provided values will be applied</p> ",    "group": "KnowledgeBase_Articles",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "title",            "description": "<p>Article title.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "body",            "description": "<p>Article content.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "slug",            "description": "<p>Slug. If there's already some post with the same slug, a numeric suffix will be added. For example, if the requested slug is <em>foo</em> and there's another post with that slug, the slug for this post will be <em>foo-1</em></p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "excerpt",            "description": "<p>Excerpt.</p> "          },          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": true,            "field": "published",            "description": "<p>Publish status.</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": true,            "field": "publish_date",            "description": "<p>Publish date, as a timestamp. If <code>published</code> is true and the <code>publish_date</code> is provided, the post will not be published until that date.</p> "          },          {            "group": "Parameter",            "type": "<p>mixed</p> ",            "optional": true,            "field": "tags",            "description": "<p>Article tags, as objects (an array of this objects is accepted) The objects must have an id attribute for existing tags. If the tag does not have an ID it is assumed to be a new one and the creation of the tag will be attempted.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PATCH -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNjg4MjM5NSwiZXhwIjoxNDM2ODg1OTk1fQ.-ezinK068LnnUgotT7FVg2QRu4vGM2KAmBwK55kxj7M\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'title=A+new+title&excerpt=Holaquetal&body=A+new+body' 'http://localhost:9000/api/knowledge_base/articles/55a4fc5b356e6df4d223618e'",        "type": "json"      }    ],    "permission": [      {        "name": "knowledge_base",        "title": "Global module access for `knowledge_base` is required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/knowledge_base/articles/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"title\": \"Test\",\n    \"slug\": \"this-is-a-test\",\n    \"excerpt\": \"Holaquetal\",\n    \"body\": \"HOLAQUETAL\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089,\n    \"publish_date\": 1434540,\n    \"published\": true,\n    \"id\": \"5581f70e4901e5baa84a9652\",\n    \"tags\": {\n      \"meta\": {\n        \"url\": \"http://localhost:9000/api/knowledge_base/articles/5581f70e4901e5baa84a9652/tags\",\n        \"count\": 0\n      }\n    }\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Article data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.excerpt",            "description": "<p>Excerpt</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "data.published",            "description": "<p>Publish status</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.publish_date",            "description": "<p>Publish date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Article tags. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Article category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments.</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/index.js",    "groupTitle": "KnowledgeBase/Articles",    "groupDescription": "<p>Articles API endpoint</p> "  },  {    "type": "post",    "url": "/knowledge_base/articles/:articleId/tags",    "title": "Create a new tag",    "name": "Create",    "description": "<p>Create a new tag and assing it to the article</p> ",    "group": "KnowledgeBase_ArticlesTags",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/tags.js",    "groupTitle": "KnowledgeBase/Articles/Tags",    "groupDescription": "<p>Tags API endpoint for some article.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Tags\">KnowledgeBase/Tags</a> except limiting the results to some article.</p> "  },  {    "type": "delete",    "url": "/knowledge_base/articles/:articleId/tags/:id",    "title": "Delete a tag",    "name": "Delete",    "description": "<p>Delete the tag with this id</p> ",    "group": "KnowledgeBase_ArticlesTags",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/tags.js",    "groupTitle": "KnowledgeBase/Articles/Tags",    "groupDescription": "<p>Tags API endpoint for some article.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Tags\">KnowledgeBase/Tags</a> except limiting the results to some article.</p> "  },  {    "type": "get",    "url": "/knowledge_base/articles/:articleId/tags/:id",    "title": "Get a tag",    "name": "Get",    "description": "<p>Get the tag with that id (for that article)</p> ",    "group": "KnowledgeBase_ArticlesTags",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/tags.js",    "groupTitle": "KnowledgeBase/Articles/Tags",    "groupDescription": "<p>Tags API endpoint for some article.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Tags\">KnowledgeBase/Tags</a> except limiting the results to some article.</p> "  },  {    "type": "get",    "url": "/knowledge_base/articles/:articleId/tags",    "title": "List the tags",    "name": "List",    "description": "<p>List all the tags applied to some post</p> ",    "group": "KnowledgeBase_ArticlesTags",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/tags.js",    "groupTitle": "KnowledgeBase/Articles/Tags",    "groupDescription": "<p>Tags API endpoint for some article.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Tags\">KnowledgeBase/Tags</a> except limiting the results to some article.</p> "  },  {    "type": "patch",    "url": "/knowledge_base/articles/:articleId/tags/:id",    "title": "Partial update a tag",    "name": "Patch",    "description": "<p>Update the tag with this id. Only provided values will be applied</p> ",    "group": "KnowledgeBase_ArticlesTags",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/tags.js",    "groupTitle": "KnowledgeBase/Articles/Tags",    "groupDescription": "<p>Tags API endpoint for some article.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Tags\">KnowledgeBase/Tags</a> except limiting the results to some article.</p> "  },  {    "type": "put",    "url": "/knowledge_base/articles/:articleId/tags/:id",    "title": "Update a tag",    "name": "Update",    "description": "<p>Update the tag with this id</p> ",    "group": "KnowledgeBase_ArticlesTags",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/tags.js",    "groupTitle": "KnowledgeBase/Articles/Tags",    "groupDescription": "<p>Tags API endpoint for some article.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Tags\">KnowledgeBase/Tags</a> except limiting the results to some article.</p> "  },  {    "type": "put",    "url": "/knowledge_base/articles/:id",    "title": "Update an article",    "name": "Update",    "description": "<p>Update the article with this id</p> ",    "group": "KnowledgeBase_Articles",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Article title.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "body",            "description": "<p>Article content.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "slug",            "description": "<p>Slug. If there's already some post with the same slug, a numeric suffix will be added. For example, if the requested slug is <em>foo</em> and there's another post with that slug, the slug for this post will be <em>foo-1</em></p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "excerpt",            "description": "<p>Excerpt.</p> "          },          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "published",            "description": "<p>Publish status.</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": true,            "field": "publish_date",            "description": "<p>Publish date, as a timestamp. If <code>published</code> is true and the <code>publish_date</code> is provided, the post will not be published until that date.</p> "          },          {            "group": "Parameter",            "type": "<p>mixed</p> ",            "optional": false,            "field": "tags",            "description": "<p>Article tags, as objects (an array of this objects is accepted) The objects must have an id attribute for existing tags. If the tag does not have an ID it is assumed to be a new one and the creation of the tag will be attempted.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PUT -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDYzMzgwNCwiZXhwIjoxNDM0NjM3NDA0fQ.IwPItcFLIDzA1MvwDXNYjVF0PxVcQ_Mft5wAU-2D8bY\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'title=Test&slug=this-is-a-test&excerpt=Holaquetal&body=HOCTL%C2%B7LA&published=1&publish_date=1434540172' http://localhost:9000/api/knowledge_base/articles/5581f70e4901e5baa84a9652",        "type": "json"      }    ],    "permission": [      {        "name": "knowledge_base",        "title": "Global module access for `knowledge_base` is required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/knowledge_base/articles/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"title\": \"Test\",\n    \"slug\": \"this-is-a-test\",\n    \"excerpt\": \"Holaquetal\",\n    \"body\": \"HOLAQUETAL\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089,\n    \"publish_date\": 1434540,\n    \"published\": true,\n    \"id\": \"5581f70e4901e5baa84a9652\",\n    \"tags\": {\n      \"meta\": {\n        \"url\": \"http://localhost:9000/api/knowledge_base/articles/5581f70e4901e5baa84a9652/tags\",\n        \"count\": 0\n      }\n    }\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Article data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.excerpt",            "description": "<p>Excerpt</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "data.published",            "description": "<p>Publish status</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.publish_date",            "description": "<p>Publish date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Article tags. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Article category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments.</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/articles/index.js",    "groupTitle": "KnowledgeBase/Articles",    "groupDescription": "<p>Articles API endpoint</p> "  },  {    "type": "post",    "url": "/knowledge_base/categories",    "title": "Create a new category",    "name": "Create",    "group": "KnowledgeBase_Categories",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>Category name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Category content.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDYzMzgwNCwiZXhwIjoxNDM0NjM3NDA0fQ.IwPItcFLIDzA1MvwDXNYjVF0PxVcQ_Mft5wAU-2D8bY\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'name=Category+name&slug=category-slug&description=Category+description' http://localhost:9000/api/knowledge_base/categories",        "type": "json"      }    ],    "permission": [      {        "name": "knowledge_base",        "title": "Global module access for `knowledge_base` is required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/auth/users/562d694276663150095d9143\"\n  },\n  \"data\": {\n    \"updated_at\": 1434636000,\n    \"created_at\": 1434636000,\n    \"role\": \"562bb8139e6d738cf1756094\",\n    \"username\": \"someName\",\n    \"email\": \"somename@somedomain.com\",\n    \"id\": \"562d694276663150095d9143\"\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Category data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Category name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.description",            "description": "<p>Category description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/index.js",    "groupTitle": "KnowledgeBase/Categories",    "groupDescription": "<p>Categories API endpoint</p> "  },  {    "type": "delete",    "url": "/knowledge_base/categories/:id",    "title": "Delete an category",    "name": "Delete",    "description": "<p>Delete the category with this id</p> ",    "group": "KnowledgeBase_Categories",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i -X DELETE http://localhost:9000/api/knowledge_base/categories/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "permission": [      {        "name": "knowledge_base",        "title": "Global module access for `knowledge_base` is required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {},\n  \"data\": {\n    \"name\": \"Test\",\n    \"slug\": \"this-is-a-test\",\n    \"description\": \"HOLAQUETAL\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089,\n    \"id\": \"5581f70e4901e5baa84a9652\"\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Category data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Category name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.description",            "description": "<p>Category description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/index.js",    "groupTitle": "KnowledgeBase/Categories",    "groupDescription": "<p>Categories API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/knowledge_base/categories/:id",    "title": "Get an category",    "name": "Get",    "description": "<p>Get the category with that id</p> ",    "group": "KnowledgeBase_Categories",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/knowledge_base/categories/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/knowledge_base/categories/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"name\": \"Test\",\n    \"slug\": \"this-is-a-test\",\n    \"description\": \"HOLAQUETAL\",\n    \"updated_at\": 1434622332,\n    \"created_at\": 1434518089,\n    \"id\": \"5581f70e4901e5baa84a9652\"\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Category data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Category name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.description",            "description": "<p>Category description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/index.js",    "groupTitle": "KnowledgeBase/Categories",    "groupDescription": "<p>Categories API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/knowledge_base/categories",    "title": "List the categories",    "name": "List",    "description": "<p>List all the categories</p> ",    "group": "KnowledgeBase_Categories",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/knowledge_base/categories --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\" : {\n    \"url\": \"http://localhost:9001/knowledge_base/categories\",\n    \"paginator\": {\n      \"total_entries\": 100,\n      \"total_pages\": 5,\n      \"page\": 1,\n      \"per_page\": 20\n    }\n  },\n  \"data\": [\n    {\n      \"description\": \"Category description\",\n      \"slug\": \"category-slug-1\",\n      \"name\": \"Category name\",\n      \"updated_at\": 1434627873,\n      \"created_at\": 1434627873,\n      \"id\": \"5582af212207075ddbc42210\"\n    },\n    {\n      \"description\": \"Category description\",\n      \"slug\": \"category-slug-2\",\n      \"name\": \"Category name\",\n      \"updated_at\": 1434628060,\n      \"created_at\": 1434628060,\n      \"id\": \"5582afdc2cf7b648dcf84aba\"\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "meta.paginator",            "description": "<p>Pagination params</p> "          },          {            "group": "Success 200",            "type": "<p>Object[]</p> ",            "optional": false,            "field": "data",            "description": "<p>The Categories data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Category name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.description",            "description": "<p>Category description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/index.js",    "groupTitle": "KnowledgeBase/Categories",    "groupDescription": "<p>Categories API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "patch",    "url": "/knowledge_base/categories/:id",    "title": "Partial update an category",    "name": "Patch",    "description": "<p>Update the category with this id. Only provided values will be applied</p> ",    "group": "KnowledgeBase_Categories",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>Category name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "description",            "description": "<p>Category content.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "slug",            "description": "<p>Slug. If there's already some category with the same slug, a numeric suffix will be added. For example, if the requested slug is <em>foo</em> and there's another category with that slug, the slug for this category will be <em>foo-1</em></p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PATCH -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNjg4MjM5NSwiZXhwIjoxNDM2ODg1OTk1fQ.-ezinK068LnnUgotT7FVg2QRu4vGM2KAmBwK55kxj7M\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'name=A+new+name&description=A+new+description' 'http://localhost:9000/api/knowledge_base/categories/55a4fc5b356e6df4d223618e'",        "type": "json"      }    ],    "permission": [      {        "name": "knowledge_base",        "title": "Global module access for `knowledge_base` is required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/knowledge_base/categories/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"name\": \"Test\",\n    \"slug\": \"this-is-a-test\",\n    \"description\": \"HOLAQUETAL\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089,\n    \"id\": \"5581f70e4901e5baa84a9652\"\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Category data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Category name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.description",            "description": "<p>Category description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/index.js",    "groupTitle": "KnowledgeBase/Categories",    "groupDescription": "<p>Categories API endpoint</p> "  },  {    "type": "put",    "url": "/knowledge_base/categories/:id",    "title": "Update an category",    "name": "Update",    "description": "<p>Update the category with this id</p> ",    "group": "KnowledgeBase_Categories",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>Category name.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "description",            "description": "<p>Category content.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "slug",            "description": "<p>Slug. If there's already some category with the same slug, a numeric suffix will be added. For example, if the requested slug is <em>foo</em> and there's another category with that slug, the slug for this category will be <em>foo-1</em></p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PUT -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDYzMzgwNCwiZXhwIjoxNDM0NjM3NDA0fQ.IwPItcFLIDzA1MvwDXNYjVF0PxVcQ_Mft5wAU-2D8bY\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'name=Test&slug=this-is-a-test&description=HOCTL%C2%B7LA' http://localhost:9000/api/knowledge_base/categories/5581f70e4901e5baa84a9652",        "type": "json"      }    ],    "permission": [      {        "name": "knowledge_base",        "title": "Global module access for `knowledge_base` is required.",        "description": ""      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/knowledge_base/categories/5581f70e4901e5baa84a9652\"\n  },\n  \"data\": {\n    \"name\": \"Test\",\n    \"slug\": \"this-is-a-test\",\n    \"description\": \"HOLAQUETAL\",\n    \"updated_at\": 1434636343,\n    \"created_at\": 1434518089,\n    \"id\": \"5581f70e4901e5baa84a9652\"\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Category data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Category name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.description",            "description": "<p>Category description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/index.js",    "groupTitle": "KnowledgeBase/Categories",    "groupDescription": "<p>Categories API endpoint</p> "  },  {    "type": "post",    "url": "/knowledge_base/categories/:categoryId/articles",    "title": "Create a new article",    "name": "Create",    "description": "<p>Create a new article and assign it to the category</p> ",    "group": "KnowledgeBase_CategoryArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/articles.js",    "groupTitle": "KnowledgeBase/Categories/Articles",    "groupDescription": "<p>Articles API endpoint for articles with some category.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "delete",    "url": "/knowledge_base/categories/:categoryId/articles/:id",    "title": "Delete an article",    "name": "Delete",    "description": "<p>Delete the article with this id</p> ",    "group": "KnowledgeBase_CategoryArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/articles.js",    "groupTitle": "KnowledgeBase/Categories/Articles",    "groupDescription": "<p>Articles API endpoint for articles with some category.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "get",    "url": "/knowledge_base/categories/:categoryId/articles/:id",    "title": "Get an article",    "name": "Get",    "description": "<p>Get the article with that id (and with that tag)</p> ",    "group": "KnowledgeBase_CategoryArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/articles.js",    "groupTitle": "KnowledgeBase/Categories/Articles",    "groupDescription": "<p>Articles API endpoint for articles with some category.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "get",    "url": "/knowledge_base/categories/:categoryId/articles",    "title": "List the articles",    "name": "List",    "description": "<p>List all the articles tagged witth some tag</p> ",    "group": "KnowledgeBase_CategoryArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/articles.js",    "groupTitle": "KnowledgeBase/Categories/Articles",    "groupDescription": "<p>Articles API endpoint for articles with some category.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "patch",    "url": "/knowledge_base/categories/:categoryId/articles/:id",    "title": "Partial update an article",    "name": "Patch",    "description": "<p>Update the article with this id. Only provided values will be applied</p> ",    "group": "KnowledgeBase_CategoryArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/articles.js",    "groupTitle": "KnowledgeBase/Categories/Articles",    "groupDescription": "<p>Articles API endpoint for articles with some category.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "put",    "url": "/knowledge_base/categories/:categoryId/articles/:id",    "title": "Update an article",    "name": "Update",    "description": "<p>Update the article with this id</p> ",    "group": "KnowledgeBase_CategoryArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/categories/articles.js",    "groupTitle": "KnowledgeBase/Categories/Articles",    "groupDescription": "<p>Articles API endpoint for articles with some category.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "post",    "url": "/knowledge_base/tags/:tagId/articles",    "title": "Create a new article",    "name": "Create",    "description": "<p>Create a new article and assign it to the tag</p> ",    "group": "KnowledgeBase_TagsArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/articles.js",    "groupTitle": "KnowledgeBase/Tags/Articles",    "groupDescription": "<p>Articles API endpoint for articles tagged with some tag.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "delete",    "url": "/knowledge_base/tags/:tagId/articles/:id",    "title": "Delete an article",    "name": "Delete",    "description": "<p>Delete the article with this id</p> ",    "group": "KnowledgeBase_TagsArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/articles.js",    "groupTitle": "KnowledgeBase/Tags/Articles",    "groupDescription": "<p>Articles API endpoint for articles tagged with some tag.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "get",    "url": "/knowledge_base/tags/:tagId/articles/:id",    "title": "Get an article",    "name": "Get",    "description": "<p>Get the article with that id (and with that tag)</p> ",    "group": "KnowledgeBase_TagsArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/articles.js",    "groupTitle": "KnowledgeBase/Tags/Articles",    "groupDescription": "<p>Articles API endpoint for articles tagged with some tag.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "get",    "url": "/knowledge_base/tags/:tagId/articles",    "title": "List the articles",    "name": "List",    "description": "<p>List all the articles tagged witth some tag</p> ",    "group": "KnowledgeBase_TagsArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/articles.js",    "groupTitle": "KnowledgeBase/Tags/Articles",    "groupDescription": "<p>Articles API endpoint for articles tagged with some tag.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "patch",    "url": "/knowledge_base/tags/:tagId/articles/:id",    "title": "Partial update an article",    "name": "Patch",    "description": "<p>Update the article with this id. Only provided values will be applied</p> ",    "group": "KnowledgeBase_TagsArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/articles.js",    "groupTitle": "KnowledgeBase/Tags/Articles",    "groupDescription": "<p>Articles API endpoint for articles tagged with some tag.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "put",    "url": "/knowledge_base/tags/:tagId/articles/:id",    "title": "Update an article",    "name": "Update",    "description": "<p>Update the article with this id</p> ",    "group": "KnowledgeBase_TagsArticles",    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/articles.js",    "groupTitle": "KnowledgeBase/Tags/Articles",    "groupDescription": "<p>Articles API endpoint for articles tagged with some tag.</p> <p>This is exactly equal to <a href=\"#api-KnowledgeBase_Articles\">KnowledgeBase/Articles</a> except limiting the results to some tag.</p> "  },  {    "type": "post",    "url": "/knowledge_base/tags",    "title": "Create a new tag",    "name": "Create",    "group": "KnowledgeBase_Tags",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>Tag name. (must be unique for this client)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "description",            "description": "<p>}  Tag description.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> `?sort[]=id|asc&amp;sort[]=name</p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDg0MTE5MywiZXhwIjoxNDM0ODQ0NzkzfQ.76hpdlVfAuBI59J1OTZ6y-nNGOkj7ZVOPgZagIJMxMQ\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'name=foo&slug=foo&description=foo+description' http://localhost:9000/api/knowledge_base/tags",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/knowledge_base/tags/5585f14bb3c67d5022b4262a\"\n  },\n  \"data\": {\n    \"slug\": \"foo-1\",\n    \"description\": \"foo description\",\n    \"name\": \"foo\",\n    \"updated_at\": 1434841419,\n    \"created_at\": 1434841419,\n    \"id\": \"5585f14bb3c67d5022b4262a\",\n    \"articles\": {\n      \"meta\": {\n        \"url\": \"http://localhost:9000/api/knowledge_base/tags/5585f14bb3c67d5022b4262a/articles\",\n        \"count\": 0\n      }\n    }\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Tag data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Tag name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.description",            "description": "<p>Tag description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.articles",            "description": "<p>Articles that have the tag applied. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/index.js",    "groupTitle": "KnowledgeBase/Tags",    "groupDescription": "<p>Articles tags API endpoint</p> "  },  {    "type": "delete",    "url": "/knowledge_base/tags/:id",    "title": "Delete a tag",    "name": "Delete",    "description": "<p>Delete the tag with this id</p> ",    "group": "KnowledgeBase_Tags",    "examples": [      {        "title": "Example usage:",        "content": "curl -X DELETE -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDg0MTE5MywiZXhwIjoxNDM0ODQ0NzkzfQ.76hpdlVfAuBI59J1OTZ6y-nNGOkj7ZVOPgZagIJMxMQ\" http://localhost:9000/api/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {},\n  \"data\": {\n    \"name\": \"bar\",\n    \"slug\": \"bar\",\n    \"description\": \"bar description\",\n    \"updated_at\": 1434842,\n    \"created_at\": 1434807342,\n    \"id\": \"5585eeb41b7b3b821cb5ba5e\",\n    \"articles\": {\n      \"meta\": {\n        \"url\": \"http://localhost:9000/api/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e/articles\",\n        \"count\": 0\n      }\n    }\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Tag data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Tag name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.description",            "description": "<p>Tag description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.articles",            "description": "<p>Articles that have the tag applied. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/index.js",    "groupTitle": "KnowledgeBase/Tags",    "groupDescription": "<p>Articles tags API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> `?sort[]=id|asc&amp;sort[]=name</p> "          }        ]      }    }  },  {    "type": "get",    "url": "/knowledge_base/tags/:id",    "title": "Get a tag",    "name": "Get",    "description": "<p>Get the tag with that id</p> ",    "group": "KnowledgeBase_Tags",    "examples": [      {        "title": "Example usage:",        "content": "curl -X GET -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDg0MTE5MywiZXhwIjoxNDM0ODQ0NzkzfQ.76hpdlVfAuBI59J1OTZ6y-nNGOkj7ZVOPgZagIJMxMQ\" http://localhost:9000/api/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e\"\n  },\n  \"data\": {\n    \"name\": \"nesciunt\",\n    \"slug\": \"nesciunt\",\n    \"updated_at\": 1434807342,\n    \"created_at\": 1434807342,\n    \"id\": \"5585eeb41b7b3b821cb5ba5e\",\n    \"articles\": {\n      \"meta\": {\n        \"url\": \"http://localhost:9000/api/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e/articles\",\n        \"count\": 0\n      }\n    }\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Tag data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Tag name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.description",            "description": "<p>Tag description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.articles",            "description": "<p>Articles that have the tag applied. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/index.js",    "groupTitle": "KnowledgeBase/Tags",    "groupDescription": "<p>Articles tags API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> `?sort[]=id|asc&amp;sort[]=name</p> "          }        ]      }    }  },  {    "type": "get",    "url": "/knowledge_base/tags",    "title": "List the tags",    "name": "List",    "description": "<p>List all the tags owned by the authenticated user</p> ",    "group": "KnowledgeBase_Tags",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i curl -X GET -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDg0MTE5MywiZXhwIjoxNDM0ODQ0NzkzfQ.76hpdlVfAuBI59J1OTZ6y-nNGOkj7ZVOPgZagIJMxMQ\" http://localhost:9000/api/knowledge_base/tags",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\" : {\n    \"url\": \"http://localhost:9001/knowledge_base/tags\",\n    \"paginator\": {\n      \"total_entries\": 100,\n      \"total_pages\": 5,\n      \"page\": 1,\n      \"per_page\": 20\n    }\n  },\n  \"data\": [\n    {\n      \"name\": \"nesciunt\",\n      \"slug\": \"nesciunt\",\n      \"updated_at\": 1434807342,\n      \"created_at\": 1434807342,\n      \"id\": \"5585eeb41b7b3b821cb5ba5e\",\n      \"articles\": {\n        \"meta\": {\n          \"url\": \"http://localhost:9000/api/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e/articles\",\n          \"count\": 4\n        }\n      }\n    },\n    {\n      \"name\": \"nostrum\",\n      \"slug\": \"nostrum\",\n      \"updated_at\": 1434836605,\n      \"created_at\": 1434836605,\n      \"id\": \"5585eeb41b7b3b821cb5ba5f\",\n      \"articles\": {\n        \"meta\": {\n          \"url\": \"http://localhost:9000/api/knowledge_base/tags/5585eeb41b7b3b821cb5ba5f/articles\",\n          \"count\": 2\n        }\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "meta.paginator",            "description": "<p>Pagination params</p> "          },          {            "group": "Success 200",            "type": "<p>Object[]</p> ",            "optional": false,            "field": "data",            "description": "<p>The Tags data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Tag name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.description",            "description": "<p>Tag description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.articles",            "description": "<p>Articles that have the tag applied. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/index.js",    "groupTitle": "KnowledgeBase/Tags",    "groupDescription": "<p>Articles tags API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> `?sort[]=id|asc&amp;sort[]=name</p> "          }        ]      }    }  },  {    "type": "patch",    "url": "/knowledge_base/tags/:id",    "title": "Partial update a tag",    "name": "Patch",    "description": "<p>Update the tag with this id. Only provided values will be applied</p> ",    "group": "KnowledgeBase_Tags",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "name",            "description": "<p>Tag name. (must be unique for this client)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "description",            "description": "<p>Tag description.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "slug",            "description": "<p>Slug. If there's already some tag with the same slug, a numeric suffix will be added. For example, if the requested slug is <em>foo</em> and there's another tag with that slug, the slug for this tag will be <em>foo-1</em></p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> `?sort[]=id|asc&amp;sort[]=name</p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PATCH -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNjg4MjM5NSwiZXhwIjoxNDM2ODg1OTk1fQ.-ezinK068LnnUgotT7FVg2QRu4vGM2KAmBwK55kxj7M\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'description=A+new+description' 'http://localhost:9000/api/knowledge_base/tags/55a51bac5f1d3855f52861ba'",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e\"\n  },\n  \"data\": {\n    \"description\": \"bar description\",\n    \"name\": \"bar\",\n    \"slug\": \"bar\",\n    \"updated_at\": 1434842,\n    \"created_at\": 1434807342,\n    \"id\": \"5585eeb41b7b3b821cb5ba5e\",\n    \"articles\": {\n      \"meta\": {\n        \"url\": \"http://localhost:9000/api/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e/articles\",\n        \"count\": 2\n      }\n    }\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Tag data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Tag name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.description",            "description": "<p>Tag description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.articles",            "description": "<p>Articles that have the tag applied. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/index.js",    "groupTitle": "KnowledgeBase/Tags",    "groupDescription": "<p>Articles tags API endpoint</p> "  },  {    "type": "put",    "url": "/knowledge_base/tags/:id",    "title": "Update a tag",    "name": "Update",    "description": "<p>Update the tag with this id</p> ",    "group": "KnowledgeBase_Tags",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "name",            "description": "<p>Tag name. (must be unique for this client)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "description",            "description": "<p>Tag description.</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "slug",            "description": "<p>Slug. If there's already some tag with the same slug, a numeric suffix will be added. For example, if the requested slug is <em>foo</em> and there's another tag with that slug, the slug for this tag will be <em>foo-1</em></p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> `?sort[]=id|asc&amp;sort[]=name</p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PUT -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDg0MTE5MywiZXhwIjoxNDM0ODQ0NzkzfQ.76hpdlVfAuBI59J1OTZ6y-nNGOkj7ZVOPgZagIJMxMQ\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'name=bar&slug=bar&description=bar+description' http://localhost:9000/api/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:9001/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e\"\n  },\n  \"data\": {\n    \"description\": \"bar description\",\n    \"name\": \"bar\",\n    \"slug\": \"bar\",\n    \"updated_at\": 1434842,\n    \"created_at\": 1434807342,\n    \"id\": \"5585eeb41b7b3b821cb5ba5e\",\n    \"articles\": {\n      \"meta\": {\n        \"url\": \"http://localhost:9000/api/knowledge_base/tags/5585eeb41b7b3b821cb5ba5e/articles\",\n        \"count\": 2\n      }\n    }\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Tag data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.name",            "description": "<p>Tag name</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.slug",            "description": "<p>URL slug</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": true,            "field": "data.description",            "description": "<p>Tag description</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.articles",            "description": "<p>Articles that have the tag applied. Collapsed by default (only a <code>meta</code> node with the collection url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/knowledge_base/routes/tags/index.js",    "groupTitle": "KnowledgeBase/Tags",    "groupDescription": "<p>Articles tags API endpoint</p> "  },  {    "type": "get",    "url": "/api/",    "title": "API entry point",    "name": "Index",    "group": "ROOT",    "description": "<p>Test route to make sure everything is working</p> ",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>Success message.</p> "          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"hooray! welcome to our api!\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/modules/api/index.js",    "groupTitle": "ROOT"  },  {    "type": "post",    "url": "/tickets/tickets",    "title": "Create a new ticket",    "name": "Create",    "group": "Tickets",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Title</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "body",            "description": "<p>Ticket content</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "category",            "description": "<p>Ticket category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjU2NmUwMzQ3MjdiMTk2NDk3NzI4NTQ0NSIsImlhdCI6MTQ1MDY1MTY4MiwiZXhwIjoxNDUwNjU1MjgyfQ.63BylDn_YKv2lY3DO02jjWLTXdWts8c0bYc9CySl2Og\" -H \"Cache-Control: no-cache\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'title=Test+title&body=Test+body&category=%7B%22id%22%3A1%7D' 'https://mosaiqo.me/api/tickets/tickets'",        "type": "json"      }    ],    "version": "0.0.0",    "filename": "src/modules/api/modules/tickets/routes/tickets/index.js",    "groupTitle": "Tickets/Tickets",    "groupDescription": "<p>Suport tickets API endpoint</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>the ticket data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": true,            "field": "data.closed",            "description": "<p>Ticket closed status. If not present or has a false value, the ticket is open</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data.user",            "description": "<p>Ticket owner. All the relations are collapsed by default (only a <code>meta</code> node with the entity url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.manager",            "description": "<p>Assigned manager</p> "          },          {            "group": "Success 200",            "type": "<p>Integer</p> ",            "optional": true,            "field": "data.priority",            "description": "<p>Ticket priority (4: critical, 3: hight, 2: normal, 1: low)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Ticket tags</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Ticket category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.comments",            "description": "<p>Ticket comments (public comments, visible to the user, and private notes, only visible to the managers)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.statuses",            "description": "<p>Ticket statuses (sorted by creation date)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments</p> "          }        ]      }    }  },  {    "type": "delete",    "url": "/tickets/tickets/:id",    "title": "Delete a ticket",    "name": "Delete",    "description": "<p>Delete the ticket with this id</p> ",    "group": "Tickets",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i -X DELETE http://localhost:9000/api/tickets/tickets/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "version": "0.0.0",    "filename": "src/modules/api/modules/tickets/routes/tickets/index.js",    "groupTitle": "Tickets/Tickets",    "groupDescription": "<p>Suport tickets API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>the ticket data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": true,            "field": "data.closed",            "description": "<p>Ticket closed status. If not present or has a false value, the ticket is open</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data.user",            "description": "<p>Ticket owner. All the relations are collapsed by default (only a <code>meta</code> node with the entity url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.manager",            "description": "<p>Assigned manager</p> "          },          {            "group": "Success 200",            "type": "<p>Integer</p> ",            "optional": true,            "field": "data.priority",            "description": "<p>Ticket priority (4: critical, 3: hight, 2: normal, 1: low)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Ticket tags</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Ticket category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.comments",            "description": "<p>Ticket comments (public comments, visible to the user, and private notes, only visible to the managers)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.statuses",            "description": "<p>Ticket statuses (sorted by creation date)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments</p> "          }        ]      }    }  },  {    "type": "get",    "url": "/tickets/tickets/:id",    "title": "Get a ticket",    "name": "Get",    "description": "<p>Get the ticket with that id</p> ",    "group": "Tickets",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/tickets/tickets/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "version": "0.0.0",    "filename": "src/modules/api/modules/tickets/routes/tickets/index.js",    "groupTitle": "Tickets/Tickets",    "groupDescription": "<p>Suport tickets API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>the ticket data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": true,            "field": "data.closed",            "description": "<p>Ticket closed status. If not present or has a false value, the ticket is open</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data.user",            "description": "<p>Ticket owner. All the relations are collapsed by default (only a <code>meta</code> node with the entity url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.manager",            "description": "<p>Assigned manager</p> "          },          {            "group": "Success 200",            "type": "<p>Integer</p> ",            "optional": true,            "field": "data.priority",            "description": "<p>Ticket priority (4: critical, 3: hight, 2: normal, 1: low)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Ticket tags</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Ticket category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.comments",            "description": "<p>Ticket comments (public comments, visible to the user, and private notes, only visible to the managers)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.statuses",            "description": "<p>Ticket statuses (sorted by creation date)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments</p> "          }        ]      }    }  },  {    "type": "get",    "url": "/tickets/tickets",    "title": "List the tickets",    "name": "List",    "description": "<p>List all the tickets</p> ",    "group": "Tickets",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/tickets/tickets --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"https://mosaiqo.me/api/tickets/tickets\",\n    \"paginator\": {\n      \"total_entries\": 14,\n      \"total_pages\": 7,\n      \"page\": 1,\n      \"per_page\": 2\n    }\n  },\n  \"data\": [\n    {\n      \"updated_at\": 1450099184,\n      \"created_at\": 1450053124,\n      \"title\": \"Com puc canviar el meu email de contacte?\",\n      \"body\": \"<p>Hola, he canviat de proveidor de correu electrònic i ara tinc un nou email. Com puc actualitzar les meves dades?</p>\",\n      \"closed\": true,\n      \"priority\": 2,\n      \"id\": \"4J4XTePBl\",\n      \"tags\": {\n        \"meta\": { \"url\": \"\", \"count\": 0 }\n      },\n      \"category\": {\n        \"meta\": { \"url\": \"\", \"count\": 1 }\n      },\n      \"attachments\": {\n        \"meta\": { \"url\": \"\", \"count\": 0 }\n      },\n      \"comments\": {\n        \"meta\": { \"url\": \"https://mosaiqo.me/api/tickets/tickets/4J4XTePBl/comments\", \"count\": 1 }\n      },\n      \"statuses\": {\n        \"meta\": { \"url\": \"https://mosaiqo.me/api/tickets/tickets/4J4XTePBl/statuses\", \"count\": 2 }\n      },\n      \"user\": {\n        \"meta\": { \"url\": \"\", \"count\": 1 }\n      },\n      \"manager\": {\n        \"meta\": { \"url\": \"\", \"count\": 1 }\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "meta.paginator",            "description": "<p>Pagination params</p> "          },          {            "group": "Success 200",            "type": "<p>Object[]</p> ",            "optional": false,            "field": "data",            "description": "<p>the tickets data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": true,            "field": "data.closed",            "description": "<p>Ticket closed status. If not present or has a false value, the ticket is open</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data.user",            "description": "<p>Ticket owner. All the relations are collapsed by default (only a <code>meta</code> node with the entity url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.manager",            "description": "<p>Assigned manager</p> "          },          {            "group": "Success 200",            "type": "<p>Integer</p> ",            "optional": true,            "field": "data.priority",            "description": "<p>Ticket priority (4: critical, 3: hight, 2: normal, 1: low)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Ticket tags</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Ticket category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.comments",            "description": "<p>Ticket comments (public comments, visible to the user, and private notes, only visible to the managers)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.statuses",            "description": "<p>Ticket statuses (sorted by creation date)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/tickets/routes/tickets/index.js",    "groupTitle": "Tickets/Tickets",    "groupDescription": "<p>Suport tickets API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "patch",    "url": "/tickets/tickets/:id",    "title": "Partial update a ticket",    "name": "Patch",    "description": "<p>Update the ticket with this id. Only provided values will be applied</p> ",    "group": "Tickets",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Title</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "body",            "description": "<p>Ticket content</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "category",            "description": "<p>Ticket category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PATCH -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNjg4MjM5NSwiZXhwIjoxNDM2ODg1OTk1fQ.-ezinK068LnnUgotT7FVg2QRu4vGM2KAmBwK55kxj7M\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'title=A+new+title&excerpt=Holaquetal&body=A+new+body' 'http://localhost:9000/api/tickets/tickets/55a4fc5b356e6df4d223618e'",        "type": "json"      }    ],    "version": "0.0.0",    "filename": "src/modules/api/modules/tickets/routes/tickets/index.js",    "groupTitle": "Tickets/Tickets",    "groupDescription": "<p>Suport tickets API endpoint</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>the ticket data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": true,            "field": "data.closed",            "description": "<p>Ticket closed status. If not present or has a false value, the ticket is open</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data.user",            "description": "<p>Ticket owner. All the relations are collapsed by default (only a <code>meta</code> node with the entity url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.manager",            "description": "<p>Assigned manager</p> "          },          {            "group": "Success 200",            "type": "<p>Integer</p> ",            "optional": true,            "field": "data.priority",            "description": "<p>Ticket priority (4: critical, 3: hight, 2: normal, 1: low)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Ticket tags</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Ticket category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.comments",            "description": "<p>Ticket comments (public comments, visible to the user, and private notes, only visible to the managers)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.statuses",            "description": "<p>Ticket statuses (sorted by creation date)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments</p> "          }        ]      }    }  },  {    "type": "put",    "url": "/tickets/tickets/:id",    "title": "Update a ticket",    "name": "Update",    "description": "<p>Update the ticket with this id</p> ",    "group": "Tickets",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "title",            "description": "<p>Title</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "body",            "description": "<p>Ticket content</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "category",            "description": "<p>Ticket category</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PUT -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSIsImlhdCI6MTQzNDYzMzgwNCwiZXhwIjoxNDM0NjM3NDA0fQ.IwPItcFLIDzA1MvwDXNYjVF0PxVcQ_Mft5wAU-2D8bY\" -H \"Content-Type: application/x-www-form-urlencoded\" -d 'title=Test&slug=this-is-a-test&excerpt=Holaquetal&body=HOCTL%C2%B7LA&published=1&publish_date=1434540172' http://localhost:9000/api/tickets/tickets/5581f70e4901e5baa84a9652",        "type": "json"      }    ],    "version": "0.0.0",    "filename": "src/modules/api/modules/tickets/routes/tickets/index.js",    "groupTitle": "Tickets/Tickets",    "groupDescription": "<p>Suport tickets API endpoint</p> ",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>the ticket data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.title",            "description": "<p>Title</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.body",            "description": "<p>Article body</p> "          },          {            "group": "Success 200",            "type": "<p>Boolean</p> ",            "optional": true,            "field": "data.closed",            "description": "<p>Ticket closed status. If not present or has a false value, the ticket is open</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data.user",            "description": "<p>Ticket owner. All the relations are collapsed by default (only a <code>meta</code> node with the entity url and the item count). Can be expanded to the full tag objects (see the <code>include</code> parameter)</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.manager",            "description": "<p>Assigned manager</p> "          },          {            "group": "Success 200",            "type": "<p>Integer</p> ",            "optional": true,            "field": "data.priority",            "description": "<p>Ticket priority (4: critical, 3: hight, 2: normal, 1: low)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.tags",            "description": "<p>Ticket tags</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "data.category",            "description": "<p>Ticket category</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.comments",            "description": "<p>Ticket comments (public comments, visible to the user, and private notes, only visible to the managers)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.statuses",            "description": "<p>Ticket statuses (sorted by creation date)</p> "          },          {            "group": "Success 200",            "type": "<p>Array</p> ",            "optional": true,            "field": "data.attachments",            "description": "<p>File atachments</p> "          }        ]      }    }  },  {    "type": "post",    "url": "/uploads",    "title": "Upload a newfile",    "name": "Create",    "group": "Uploads",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>File</p> ",            "optional": false,            "field": "file",            "description": "<p>The file</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X POST -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjU2NGNlZjg5ZWY5Y2Q3YTA0MjY0OTVlNyIsImlhdCI6MTQ0Nzg4MjY2OCwiZXhwIjoxNDQ3ODg2MjY4fQ.S0PcSY3WSKn1TzSVmJPuOpTKmr_XJerQtKI1EHaCeQY\" -H \"Cache-Control: no-cache\" -H \"Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\" -F \"file=hhhehehe.gif\" 'http://localhost:8000/api/uploads'",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:8000/api/uploads/564cf5fb00e1e92a5124e44f\"\n  },\n  \"data\": {\n    \"updated_at\": 1447884284,\n    \"created_at\": 1447884284,\n    \"contentType\": \"image/gif\",\n    \"size\": 1409876,\n    \"path\": \"uploads/NymbHkIQx.gif\",\n    \"host\": \"files.helpdesk.mosaiqo.me\",\n    \"url\": \"http://files.helpdesk.mosaiqo.me/uploads/NymbHkIQx.gif\",\n    \"id\": \"564cf5fb00e1e92a5124e44f\"\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Upload data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.contentType",            "description": "<p>Upload file contentType</p> "          },          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "data.size",            "description": "<p>File size, in bytes</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.path",            "description": "<p>Path to the file</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.host",            "description": "<p>Host name, for the server where the file is (useful when uploading to S3)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.url",            "description": "<p>File url</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/uploads/routes/uploads.js",    "groupTitle": "Uploads",    "groupDescription": "<p>Uploads API endpoint</p> "  },  {    "type": "delete",    "url": "/uploads/:id",    "title": "Delete an upload",    "name": "Delete",    "description": "<p>Delete the upload record with this id (and delete the file)</p> ",    "group": "Uploads",    "examples": [      {        "title": "Example usage:",        "content": "curl -X DELETE -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjU2NGNlZjg5ZWY5Y2Q3YTA0MjY0OTVlNyIsImlhdCI6MTQ0Nzg4MjY2OCwiZXhwIjoxNDQ3ODg2MjY4fQ.S0PcSY3WSKn1TzSVmJPuOpTKmr_XJerQtKI1EHaCeQY\" -H \"Cache-Control: no-cache\" 'http://localhost:8000/api/uploads/564cf5fb00e1e92a5124e44f'",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:8000/api/uploads/564cf5fb00e1e92a5124e44f\"\n  },\n  \"data\": {\n    \"updated_at\": 1447884553,\n    \"created_at\": 1447884284,\n    \"contentType\": \"image/png\",\n    \"size\": 618149,\n    \"path\": \"uploads/V1TM8yLml.png\",\n    \"host\": \"files.helpdesk.mosaiqo.me\",\n    \"url\": \"http://files.helpdesk.mosaiqo.me/uploads/V1TM8yLml.png\",\n    \"id\": \"564cf5fb00e1e92a5124e44f\"\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Upload data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.contentType",            "description": "<p>Upload file contentType</p> "          },          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "data.size",            "description": "<p>File size, in bytes</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.path",            "description": "<p>Path to the file</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.host",            "description": "<p>Host name, for the server where the file is (useful when uploading to S3)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.url",            "description": "<p>File url</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/uploads/routes/uploads.js",    "groupTitle": "Uploads",    "groupDescription": "<p>Uploads API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/uploads/:id",    "title": "Get an upload",    "name": "Get",    "description": "<p>Get the upload with that id</p> ",    "group": "Uploads",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/uploads/551c31d0430d78991f5931e1 --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:8000/api/uploads/564cf5fb00e1e92a5124e44f\"\n  },\n  \"data\": {\n    \"updated_at\": 1447884284,\n    \"created_at\": 1447884284,\n    \"contentType\": \"image/gif\",\n    \"size\": 1409876,\n    \"path\": \"uploads/NymbHkIQx.gif\",\n    \"host\": \"files.helpdesk.mosaiqo.me\",\n    \"url\": \"http://files.helpdesk.mosaiqo.me/uploads/NymbHkIQx.gif\",\n    \"id\": \"564cf5fb00e1e92a5124e44f\"\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Upload data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.contentType",            "description": "<p>Upload file contentType</p> "          },          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "data.size",            "description": "<p>File size, in bytes</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.path",            "description": "<p>Path to the file</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.host",            "description": "<p>Host name, for the server where the file is (useful when uploading to S3)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.url",            "description": "<p>File url</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/uploads/routes/uploads.js",    "groupTitle": "Uploads",    "groupDescription": "<p>Uploads API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "get",    "url": "/uploads",    "title": "List the uploads",    "name": "List",    "description": "<p>List all the uploads (where the user performing the request has privileges)</p> ",    "group": "Uploads",    "examples": [      {        "title": "Example usage:",        "content": "curl -4 -i http://localhost:9000/api/uploads --header \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1NGVlNjE3NTQ2NWVhZWUzNWNkMjM3ZWQiLCJpYXQiOjE0Mjc4MTczNTksImV4cCI6MTQyNzgyMDk1OX0.M3BboY6U9RJlX1ulVG7e9xRVrVdY3qVhvp3jmZaOCJ8\"",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:8000/api/uploads\",\n    \"paginator\": {\n      \"total_entries\": 1,\n      \"total_pages\": 1,\n      \"page\": 1,\n      \"per_page\": 20\n    }\n  },\n  \"data\": [\n    {\n      \"updated_at\": 1447882689,\n      \"created_at\": 1447882689,\n      \"contentType\": \"image/png\",\n      \"size\": 275815,\n      \"path\": \"uploads/EJnAR0rmg.png\",\n      \"host\": \"files.helpdesk.mosaiqo.me\",\n      \"url\": \"http://localhost:8000/uploads/EJnAR0rmg.png\",\n      \"id\": \"564cefc1ef9cd7a0426495e8\"\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": true,            "field": "meta.paginator",            "description": "<p>Pagination params</p> "          },          {            "group": "Success 200",            "type": "<p>Object[]</p> ",            "optional": false,            "field": "data",            "description": "<p>The Uploads data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.contentType",            "description": "<p>Upload file contentType</p> "          },          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "data.size",            "description": "<p>File size, in bytes</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.path",            "description": "<p>Path to the file</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.host",            "description": "<p>Host name, for the server where the file is (useful when uploading to S3)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.url",            "description": "<p>File url</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/uploads/routes/uploads.js",    "groupTitle": "Uploads",    "groupDescription": "<p>Uploads API endpoint</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    }  },  {    "type": "patch",    "url": "/uploads/:id",    "title": "Partial update an upload",    "name": "Patch",    "description": "<p>This method is exactly equal to the PUT one, defined for consistency</p> ",    "group": "Uploads",    "version": "0.0.0",    "filename": "src/modules/api/modules/uploads/routes/uploads.js",    "groupTitle": "Uploads",    "groupDescription": "<p>Uploads API endpoint</p> "  },  {    "type": "put",    "url": "/uploads/:id",    "title": "Update an upload",    "name": "Update",    "description": "<p>Update the upload with this id (replace the file)</p> ",    "group": "Uploads",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>File</p> ",            "optional": false,            "field": "file",            "description": "<p>The file</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "include",            "description": "<p>Nested objects to expand. It can be an array.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "per_page",            "description": "<p>The methods that return multiple models are paginated by default. This determines the number of elements returned (by default 20). There's a hard limit (200). Requests with a greater value will return only the maximum allowed items.</p> "          },          {            "group": "Parameter",            "type": "<p>Integer</p> ",            "optional": true,            "field": "page",            "description": "<p>The results page (for paginated results)</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": true,            "field": "sort",            "description": "<p>Sort criteria. Accepts multiple values (arrays or separated with commas). It also accepts the sort direction (if not provided, 'asc' will be used). Accepted values: <code>1</code>, <code>-1</code>, <code>asc</code>, <code>desc</code>. Examples: <code>?sort=id</code> <code>?sort=id|asc</code> <code>?sort=id|asc,name|desc</code> <code>?sort[]=id|asc&amp;sort[]=name</code></p> "          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -X PUT -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjU2NGNlZjg5ZWY5Y2Q3YTA0MjY0OTVlNyIsImlhdCI6MTQ0Nzg4MjY2OCwiZXhwIjoxNDQ3ODg2MjY4fQ.S0PcSY3WSKn1TzSVmJPuOpTKmr_XJerQtKI1EHaCeQY\" -H \"Cache-Control: no-cache\" -H \"Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\" -F \"file=File 14-11-15 12 07 34.png\" 'http://localhost:8000/api/uploads/564cf5fb00e1e92a5124e44f'",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"meta\": {\n    \"url\": \"http://localhost:8000/api/uploads/564cf5fb00e1e92a5124e44f\"\n  },\n  \"data\": {\n    \"updated_at\": 1447884553,\n    \"created_at\": 1447884284,\n    \"contentType\": \"image/png\",\n    \"size\": 618149,\n    \"path\": \"uploads/V1TM8yLml.png\",\n    \"host\": \"files.helpdesk.mosaiqo.me\",\n    \"url\": \"http://files.helpdesk.mosaiqo.me/uploads/V1TM8yLml.png\",\n    \"id\": \"564cf5fb00e1e92a5124e44f\"\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "meta",            "description": "<p>Response metadata</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "meta.url",            "description": "<p>Resource url</p> "          },          {            "group": "Success 200",            "type": "<p>Object</p> ",            "optional": false,            "field": "data",            "description": "<p>The Upload data</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.id",            "description": "<p>Id</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.contentType",            "description": "<p>Upload file contentType</p> "          },          {            "group": "Success 200",            "type": "<p>Number</p> ",            "optional": false,            "field": "data.size",            "description": "<p>File size, in bytes</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.path",            "description": "<p>Path to the file</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.host",            "description": "<p>Host name, for the server where the file is (useful when uploading to S3)</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.url",            "description": "<p>File url</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.created_at",            "description": "<p>Creation date</p> "          },          {            "group": "Success 200",            "type": "<p>String</p> ",            "optional": false,            "field": "data.updated_at",            "description": "<p>Last update date</p> "          }        ]      }    },    "version": "0.0.0",    "filename": "src/modules/api/modules/uploads/routes/uploads.js",    "groupTitle": "Uploads",    "groupDescription": "<p>Uploads API endpoint</p> "  }]